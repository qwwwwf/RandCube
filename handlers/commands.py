from keyboards import *
from aiogram import Router
from database import User, Event
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Text, Command, CommandObject


router = Router()


# <----------/ Commands /---------->

@router.message(Command(commands=['start']))
async def start_command(message: Message, command: CommandObject):
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –≤ –º–µ–Ω—é', reply_markup=keyboard_main)

    if await User(message.chat.id).user_exists() is False:
        await User(message.chat.id).create_user()

    if await Event(message.chat.id).add_user_into_event(command.args) is True:
        await message.answer(
            '‚úÖ <b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ</b>\n\n'
            '‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞:\n<i>–ê–∫–∫–∞—É–Ω—Ç ‚Üí –ú–æ–∏ —É—á–∞—Å—Ç–∏—è</i>'
        )


@router.message(Text('üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è'))
async def category_generation(message: Message):
    await message.answer(
        text='<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è\n\n'
             '<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º–Ω–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–µ–π! üòâ',
        reply_markup=keyboard_generation
    )


@router.message(Text('üèÜ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è'))
async def category_events(message: Message):
    await message.answer(
        text='<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üèÜ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\n\n'
             '<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> —Ç—É—Ç –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –ª–∏–±–æ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ '
             '–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤ —Å–∞–º–æ–º –±–æ—Ç–µ! ü•á',
        reply_markup=keyboard_events
    )


@router.message(Text('‚òéÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'))
async def category_feedback(message: Message):
    await message.answer(
        text='<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ‚òéÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n\n'
             '<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –µ—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞, —Ç–æ –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞–º',
        reply_markup=keyboard_feedback
    )


@router.message(Text('‚ÑπÔ∏è –û –±–æ—Ç–µ'))
async def category_faq(message: Message):
    await message.answer(
        '–°–æ–≤–µ—Ç—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é –ø—Ä–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞:\n'
        'https://telegra.ph/Randomizer-Bot---luchshij-bot-randomajzer-05-15',
        reply_markup=keyboard_close
    )


@router.message(Text('üë§ –ê–∫–∫–∞—É–Ω—Ç'))
async def category_account(message: Message):
    await message.answer(
        text=f'üë§ <b>{message.chat.full_name}, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç:</b>\n\n'
             f'–ü–æ–∫–∞–∑ —Ñ–∞–∫—Ç–æ–≤: {await User(message.chat.id).user_is_allow_see_facts()}'
        .replace('False', '‚ùå').replace('True', '‚úÖ'),
        reply_markup=keyboard_account
    )


@router.callback_query(lambda callback: callback.data == 'close')
async def close_message(callback: CallbackQuery):
    await callback.message.delete()
